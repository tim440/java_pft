package ru.rgs.APITests;

import com.google.common.collect.ImmutableMap;
import io.qameta.allure.Step;
import jdk.nashorn.internal.ir.annotations.Ignore;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;
import ru.rgs.APITests.model.AgentStatement.AgentStatementSaveResult;
import ru.rgs.APITests.model.AgentStatement.Create.AgentStatementCreate;
import ru.rgs.APITests.model.AgentStatement.Submit.AgentStatementSubmit;
import ru.rgs.APITests.model.SearchAgent.SearchAgent;
import ru.rgs.APITests.model.SearchInsurer.Insurer.InsurerPreview;
import ru.rgs.APITests.model.SearchInsurer.InsurerFull.FullInsurerResponse;
import ru.rgs.APITests.model.SearchInsurer.Request.RequestInsurer;
import ru.rgs.APITests.model.SearchVehicle.full.VehicleFound;
import ru.rgs.APITests.model.SearchVehicle.preview.VehiclePreview;
import ru.rgs.APITests.model.SearchVehicle.search.VehicleSearch;
import ru.rgs.APITests.model.contracts.osago.create.OsagoCreate;
import ru.rgs.APITests.model.contracts.osago.submit.OsagoSubmit;
import ru.rgs.APITests.model.contracts.saveResult.SaveResult;

import javax.ws.rs.client.Client;
import javax.ws.rs.client.Entity;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;

import static org.testng.Assert.assertEquals;

public class JerseyTest extends TestBase{

    private Client client;

    @BeforeClass
    public void init(){
        client = storage.getClient();
    }


    @Test(enabled = false)
    public void createAgentStatement(){
        SearchAgent SearchAgent = getSearchAgent();
        AgentStatementCreate agentStatementCreate = getAgentStatementCreate(SearchAgent);
        String requestAgentSubmit = createRequestAgentStatementSubmit(agentStatementCreate);
        AgentStatementSaveResult agentStatementSaveResult = submitAgentStatement(requestAgentSubmit);
        OsagoCreate osagoCreate = createOsago(agentStatementSaveResult);
        InsurerPreview insurerPreview = getInsurerPreview();
        FullInsurerResponse fullInsurerResponse = getFullInsurerResponse(insurerPreview);
        VehiclePreview vehiclePreview = getVehiclePreview();
        VehicleFound vehicleFound = getVehicleFound(vehiclePreview);
        String requestOsagoSubmit = getRequestForSubmitOsago(osagoCreate, fullInsurerResponse, vehicleFound);
        osagoSubmit(requestOsagoSubmit);
    }

    @Step("Сохранение отчета агента")
    private AgentStatementSaveResult submitAgentStatement(String requestAgentSubmit) {
        target = client.target(BASE_URL + "private/data/module-agent/AgentStatementWs/store");
        Response saveAgentStatement = getInvocation(target, Entity.entity(requestAgentSubmit, MediaType.APPLICATION_FORM_URLENCODED_TYPE)).invoke();
        AgentStatementSaveResult agentStatementSaveResult = getAgentStatementSaveResult(saveAgentStatement);
        assertEquals(agentStatementSaveResult.isSuccess(), true);
        return agentStatementSaveResult;
    }

    @Step("Создание запроса для сохранения отчета агента из ответа создания отчета агента")
    private String createRequestAgentStatementSubmit(AgentStatementCreate agentStatementCreate) {
        AgentStatementSubmit agentReportSubmit = CreateObjects.createAgentReportSubmit(agentStatementCreate, "2017-04-04T00:00:00", agentStatementCreate.getCreateOperationResult().getCreateObject().getAgentStatement().getCurrencyType().getName(), agentStatementCreate.getCreateOperationResult().getCreateObject().getAgentStatement().getCurrencyType().getId(), agentStatementCreate.getCreateOperationResult().getCreateObject().getAgentStatement().getPaymentType().getName(), agentStatementCreate.getCreateOperationResult().getCreateObject().getAgentStatement().getPaymentType().getId());
        String jsonRequestSubmitAgentReport = gson.toJson(agentReportSubmit);
        String requestAgentSubmit = "update=true&records=" + jsonRequestSubmitAgentReport + "&acceptedWarnings=%5B%5D";
        log("REQUEST AGENT STATEMENT:\n === ===============\n" + requestAgentSubmit + "\n ==================\n");
        return requestAgentSubmit;
    }

    @Step("Создание отчета агента")
    private AgentStatementCreate getAgentStatementCreate(SearchAgent searchAgent) {
        String agentId = searchAgent.getAgents().get(0).getId();
        target = client.target(BASE_URL + "private/data/module-agent/AgentStatementWs/create");
        Response createAgentStatement = getInvocation(target, Entity.entity("agentId=" + agentId, MediaType.APPLICATION_FORM_URLENCODED_TYPE)).invoke();
        return getAgentStatementCreate(createAgentStatement);
    }

    @Step("Поиск агента в списочной форме")
    private SearchAgent getSearchAgent() {
        target = client.target(BASE_URL + "private/data/module-search/AgentSimpleSearchWs/find");
        Response responseSearchAgent = getInvocation(target, Entity.entity(jsonRequest, MediaType.APPLICATION_FORM_URLENCODED_TYPE)).invoke();
        checkStatusResponse(responseSearchAgent);
        return getSearchAgent(responseSearchAgent);
    }

    @Step("Создание ОСАГО")
    private OsagoCreate createOsago(AgentStatementSaveResult agentStatementSaveResult) {
        target = client.target(BASE_URL + "private/data/module-osago/OsagoWs/create");
        String agentStatementId = gson.toJson(ImmutableMap.of("agentStatementId", agentStatementSaveResult.getModificationResult().getId()));
        //"72018efdb8a60c01811e78ab8"
        Response createOsago = getInvocation(target, Entity.entity(agentStatementId, MediaType.APPLICATION_JSON)).invoke();
        return getOsagoCreate(createOsago);
    }

    @Step("Запрос страхователя")
    private InsurerPreview getInsurerPreview() {
        RequestInsurer requestInsurer = new RequestInsurer("1", "Бах Бах Бах");
        String jsonRequestInsurer = gson.toJson(requestInsurer);
        String requestInsurerPreview = "constraints=" + jsonRequestInsurer + "&page=1&start=0&limit=100";
        target = client.target(BASE_URL + "private/data/module-search/PersonSearchWs/find");
        Response insurerSearchResponse = getInvocation(target, Entity.entity(requestInsurerPreview, MediaType.APPLICATION_FORM_URLENCODED_TYPE)).invoke();
        InsurerPreview insurerPreview = getInsurerSearch(insurerSearchResponse);
        assertEquals(insurerPreview.isSuccess(), true);
        return insurerPreview;
    }

    @Step("Получение персоны")
    private FullInsurerResponse getFullInsurerResponse(InsurerPreview insurerPreview) {
        String requestFullInsurer = "load=true&page=1&start=0&limit=100&filter=%5B%7B%22property%22%3A%22id%22%2C%22value%22%3A%22"
                + insurerPreview.getInsurers().get(0).getId() + "%22%7D%5D";//"72018f80c1c90c45f11e790bc";
        target = client.target(BASE_URL + "private/data/module-person/PersonWs/find");
        Response responseFullInsurer = getInvocation(target, Entity.entity(requestFullInsurer, MediaType.APPLICATION_FORM_URLENCODED_TYPE)).invoke();
        FullInsurerResponse fullInsurerResponse = getFullInsurerResponse(responseFullInsurer);
        assertEquals(fullInsurerResponse.isSuccess(), true);
        return fullInsurerResponse;
    }

    @Step("Получение ТС со списочной формы")
    private VehiclePreview getVehiclePreview() {
        VehicleSearch vehicleSearch = new VehicleSearch();
        String jsonVehicleSearch = gson.toJson(vehicleSearch);
        String requestVehicleSearch = "constraints=" + jsonVehicleSearch + "&page=1&start=0&limit=100";
        target = client.target(BASE_URL + "private/data/module-search/VehicleSearchWs/find");
        Response responseVehicleSearch = getInvocation(target, Entity.entity(requestVehicleSearch, MediaType.APPLICATION_FORM_URLENCODED_TYPE)).invoke();
        VehiclePreview vehiclePreview = getVehiclePreview(responseVehicleSearch);
        assertEquals(vehiclePreview.isSuccess(), true);
        return vehiclePreview;
    }

    @Step("Создание запроса для сохранения ОСАГО")
    private String getRequestForSubmitOsago(OsagoCreate osagoCreate, FullInsurerResponse fullInsurerResponse, VehicleFound vehicleFound) {
        OsagoSubmit osagoSubmit = CreateObjects.createOsagoSubmit(osagoCreate, fullInsurerResponse.getFullInsurers().get(0),
                vehicleFound.getVehicles().get(0));
        String jsonRequestSubmitOsago = gson.toJson(osagoSubmit);
        String requestOsagoSubmit = "update=true&records=" + jsonRequestSubmitOsago + "&acceptedWarnings=%5B%220010800%22%2C%220010700%22%2C%220006802%22%5D";
        /*String requestOsagoSubmit = "update=true&records={\"contractType\":{\"code\":\"2\",\"name\":\"ОСАГО\",\"id\":\"2\"},\"coInsuranceRole\":{\"code\":\"\",\"name\":\"\",\"id\":\"\"},\"removedChangeId\":\"\",\"program\":{\"code\":\"\",\"name\":\"\",\"id\":\"\"},\"branch\":{\"name\":\"Дирекция Филиала ПАО \\u0027Росгосстрах\\u0027 в Амурской области\",\"id\":\"72850010\",\"holdingCompany\":{\"displayName\":\"\"},\"bid\":\"72018\",\"countrySubjectId\":\"28\"},\"parentContractOption\":{\"code\":\"\",\"name\":\"\",\"id\":\"\"},\"sapContractId\":\"\",\"validationLogList\":[],\"number\":\"2000000001\",\"currentContractChange\":{\"agreementType\":{\"code\":\"\",\"name\":\"\",\"id\":\"\"},\"agentId\":\"\",\"cancelDate\":null,\"docBase\":\"\",\"premiumPaidSum\":0,\"endDate\":null,\"agentDisplayName\":\"\",\"contractCurrency\":{\"code\":\"\",\"name\":\"\",\"id\":\"\"},\"statementDate\":null,\"contractStatusCode\":\"\",\"signDate\":null,\"contractCurrencySum\":0,\"nssoRecordState\":\"\",\"agentStatementNumber\":\"\",\"damageCurrencySum\":0,\"nssoMethod\":\"\",\"damageRateForOne\":0,\"number\":\"\",\"premiumProportion\":false,\"prolongationType\":\"\",\"topBranchUserName\":\"\",\"damageCurrencyCode\":\"\",\"cancelReason\":{\"name\":\"Заявление страхователя\",\"id\":\"7\"},\"createDate\":null,\"cancelApplicationDate\":null,\"contractCancel\":false,\"noChangeBso\":false,\"comments\":\"\",\"contractStartDate\":null,\"changeType\":{\"code\":\"1\",\"name\":\"Ввод нового договора\"},\"versionNumber\":0,\"naumenNumber\":\"\",\"agentStatementId\":\"\",\"agentStatementDate\":\"\",\"blankDto\":\"\",\"series\":\"\",\"contractId\":\"\",\"sysModifyDate\":\"2017-04-04T00:06:58\",\"bid\":\"72018\",\"contractClassCode\":\"2\",\"user\":\"\",\"sapMigrationReasonCode\":\"\",\"startDate\":null,\"cancelActNumber\":\"\"},\"autoDealer\":{\"id\":\"\",\"codeAndName\":\"\"},\"principalInsuranceCompany\":{\"name\":\"\",\"id\":\"\"},\"financialUnit\":{\"name\":\"\",\"id\":\"\"},\"id\":\"\",\"targetChangeTypeCode\":\"\",\"sourceTchInspVehicleId\":\"\",\"otherPartner\":{\"id\":\"\",\"codeAndName\":\"\"},\"isReceivedPrimaryDoc\":false,\"premiumChargeType\":{\"code\":\"1\"},\"insurerPersonTypeCode\":\"1\",\"blankChangeReasonDto\":\"\",\"rsaBonusMalusId\":\"\",\"creationType\":{\"code\":\"\"},\"serviceStationList\":[],\"saleChannel\":{\"id\":\"131\",\"codeAndName\":\"131 - Стационарные офисы\",\"parentId\":\"130\"},\"bonusMalusCoeffValue\":0,\"coInsuranceCompany\":{\"name\":\"\",\"id\":\"\"},\"premiumChanged\":false,\"status\":{\"code\":\"\",\"name\":\"\",\"id\":\"\",\"isActive\":0},\"noBlank\":false,\"insuredVehicle\":{\"vehicleTypeId\":\"2\",\"vehicleUsagePurpose\":{\"id\":\"1\"},\"registrationMark\":\"А111АА750\",\"techInspectionNextDate\":null,\"isInTransit\":false,\"techInspectionMissing\":true,\"blankHasOperator\":false,\"registrationCountry\":{\"id\":\"1\"},\"regDocumentSeries\":\"456456\",\"subjectId\":\"720183f491c70c46011e7ab51\",\"vehicleCategoryName\":\"Категория B\",\"sysEditor\":\"21\",\"kladrTerritoryId\":\"22216\",\"registrationDate\":\"2000-01-01T00:00:00\",\"trailerUsed\":false,\"kladrTerritoryCode\":\"\",\"tractorUsePeriodDate\":\"2014-01-01T00:00:00\",\"kladrRussia\":true,\"id\":\"\",\"thirdUsePeriod\":{\"endDate\":null,\"id\":\"\",\"startDate\":null},\"actualCost\":\"\",\"owner\":{\"sysEditor\":\"21\",\"displayName\":\"Автотестер Автотестер\",\"entityChangeId\":\"720187b11d440c46011e790bc\",\"id\":\"72018f80c1c90c45f11e790bc\",\"subjectType\":{\"code\":\"1\"}},\"firstUsePeriod\":{\"endDate\":\"2018-04-03T00:00:00\",\"id\":\"\",\"startDate\":\"2017-04-04T00:00:00\"},\"secondUsePeriod\":{\"endDate\":null,\"id\":\"\",\"startDate\":null},\"inspectionBlankIsMissing\":false,\"regDocType\":{\"id\":\"1\"},\"techInspectionDate\":null,\"isNew\":false,\"inspectionOperator\":{\"id\":\"\",\"codeAndName\":\"\"},\"isForeignRegistration\":false,\"coeffValueList\":[],\"possessionGround\":{\"id\":\"1\"},\"techInspectionNumber\":\"\",\"kladrTerritoryName\":\"Алтайский край, г. Алейск\",\"usedForDangerousCargo\":false,\"contractId\":\"\",\"regDocumentNumber\":\"48464544\",\"bid\":\"72018\",\"bonusMalus\":{\"id\":\"M\"},\"territoryChanged\":false,\"drivingLimitationType\":{\"code\":\"0\",\"id\":\"0\"},\"osagoTerritory\":{\"code\":\"\",\"name\":\"\",\"id\":\"\"}},\"previousDocumentList\":\"\",\"vehicleName\":\"\",\"insuredVehicleId\":\"\",\"lastContractDate\":null,\"isCoInsurance\":false,\"agentStatementNumber\":\"72850010-72850010-040417\",\"debitWriteOffReason\":{\"name\":\"\",\"id\":\"\"},\"vehicle\":{},\"sapNotMigratedStatementNumberList\":\"\",\"premium\":10000,\"osagoChassisStartDate\":\"2017-04-01T00:00:00.0\",\"insurer\":{\"contractDate\":null,\"isNotResident\":true,\"isInboul\":false,\"clientStatus\":{\"name\":\"\",\"id\":\"\"},\"sectorEconomyList\":\"\",\"sysEditor\":\"21\",\"bankAccountList\":\"\",\"entityChangeId\":\"720187b11d440c46011e790bc\",\"id\":\"72018f80c1c90c45f11e790bc\",\"contractEntityPurpose\":\"\",\"codeForeignOrganization\":\"\",\"contractTypeCode\":\"\",\"ogrn\":\"\",\"kpp\":\"\",\"additionalDocumentTypeList\":[{\"code\":\"039\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"390\",\"name\":\"Удостоверение тракториста-машиниста\",\"id\":\"039\",\"startDate\":\"1900-01-01T00:00:00.0\",\"codeAndName\":\"039 - Удостоверение тракториста-машиниста\"},{\"code\":\"040\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"400\",\"name\":\"Удостоверение тракториста-машиниста старого образца\",\"id\":\"040\",\"startDate\":\"1900-01-01T00:00:00.0\",\"codeAndName\":\"040 - Удостоверение тракториста-машиниста старого образца\"},{\"code\":\"001\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"10\",\"name\":\"Свидетельство о рождении РФ\",\"id\":\"001\",\"startDate\":\"1900-01-01T00:00:00.0\",\"codeAndName\":\"001 - Свидетельство о рождении РФ\"},{\"code\":\"002\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"20\",\"name\":\"Удостоверение личности офицера РФ\",\"id\":\"002\",\"startDate\":\"1900-01-01T00:00:00.0\",\"codeAndName\":\"002 - Удостоверение личности офицера РФ\"},{\"code\":\"003\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"30\",\"name\":\"Справка об освобождении из места лишения свободы РФ\",\"id\":\"003\",\"startDate\":\"1900-01-01T00:00:00.0\",\"codeAndName\":\"003 - Справка об освобождении из места лишения свободы РФ\"},{\"code\":\"004\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"40\",\"name\":\"Паспорт Минморфлота\",\"id\":\"004\",\"startDate\":\"1900-01-01T00:00:00.0\",\"codeAndName\":\"004 - Паспорт Минморфлота\"},{\"code\":\"005\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"50\",\"name\":\"Военный билет солдата (матроса, сержанта, старшины) РФ\",\"id\":\"005\",\"startDate\":\"1900-01-01T00:00:00.0\",\"codeAndName\":\"005 - Военный билет солдата (матроса, сержанта, старшины) РФ\"},{\"code\":\"006\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"60\",\"name\":\"Дипломатический паспорт гражданина РФ\",\"id\":\"006\",\"startDate\":\"1900-01-01T00:00:00.0\",\"codeAndName\":\"006 - Дипломатический паспорт гражданина РФ\"},{\"code\":\"007\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"70\",\"name\":\"Иностранный паспорт\",\"id\":\"007\",\"startDate\":\"1900-01-01T00:00:00.0\",\"codeAndName\":\"007 - Иностранный паспорт\"},{\"code\":\"008\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"80\",\"name\":\"Свидетельство о регистрации ходатайства иммигранта о признании его беженцем\",\"id\":\"008\",\"startDate\":\"1900-01-01T00:00:00.0\",\"codeAndName\":\"008 - Свидетельство о регистрации ходатайства иммигранта о признании его беженцем\"},{\"code\":\"009\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"90\",\"name\":\"Вид на жительство\",\"id\":\"009\",\"startDate\":\"1900-01-01T00:00:00.0\",\"codeAndName\":\"009 - Вид на жительство\"},{\"code\":\"010\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"100\",\"name\":\"Удостоверение беженца в РФ\",\"id\":\"010\",\"startDate\":\"1900-01-01T00:00:00.0\",\"codeAndName\":\"010 - Удостоверение беженца в РФ\"},{\"code\":\"011\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"110\",\"name\":\"Временное удостоверение личности гражданина РФ\",\"id\":\"011\",\"startDate\":\"1900-01-01T00:00:00.0\",\"codeAndName\":\"011 - Временное удостоверение личности гражданина РФ\"},{\"code\":\"012\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"120\",\"name\":\"Паспорт гражданина РФ\",\"id\":\"012\",\"startDate\":\"1900-01-01T00:00:00.0\",\"codeAndName\":\"012 - Паспорт гражданина РФ\"},{\"code\":\"013\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"130\",\"name\":\"Загранпаспорт гражданина РФ\",\"id\":\"013\",\"startDate\":\"1900-01-01T00:00:00.0\",\"codeAndName\":\"013 - Загранпаспорт гражданина РФ\"},{\"code\":\"014\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"140\",\"name\":\"Свидетельство о рождении, выданное уполномоченным органом иностранного государства\",\"id\":\"014\",\"startDate\":\"1900-01-01T00:00:00.0\",\"codeAndName\":\"014 - Свидетельство о рождении, выданное уполномоченным органом иностранного государства\"},{\"code\":\"015\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"150\",\"name\":\"Паспорт моряка\",\"id\":\"015\",\"startDate\":\"1900-01-01T00:00:00.0\",\"codeAndName\":\"015 - Паспорт моряка\"},{\"code\":\"016\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"160\",\"name\":\"Военный билет офицера запаса РФ\",\"id\":\"016\",\"startDate\":\"1900-01-01T00:00:00.0\",\"codeAndName\":\"016 - Военный билет офицера запаса РФ\"},{\"code\":\"017\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"170\",\"name\":\"Водительское удостоверение РФ\",\"id\":\"017\",\"startDate\":\"1900-01-01T00:00:00.0\",\"codeAndName\":\"017 - Водительское удостоверение РФ\"},{\"code\":\"018\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"180\",\"name\":\"Иные документы, выдаваемые органами МВД России\",\"id\":\"018\",\"startDate\":\"1900-01-01T00:00:00.0\",\"codeAndName\":\"018 - Иные документы, выдаваемые органами МВД России\"},{\"code\":\"019\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"190\",\"name\":\"Паспорт гражданина СССР\",\"id\":\"019\",\"startDate\":\"1900-01-01T00:00:00.0\",\"codeAndName\":\"019 - Паспорт гражданина СССР\"},{\"code\":\"020\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"200\",\"name\":\"Загранпаспорт гражданина СССР\",\"id\":\"020\",\"startDate\":\"1900-01-01T00:00:00.0\",\"codeAndName\":\"020 - Загранпаспорт гражданина СССР\"},{\"code\":\"022\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"220\",\"name\":\"Свидетельство о смерти\",\"id\":\"022\",\"startDate\":\"1900-01-01T00:00:00.0\",\"codeAndName\":\"022 - Свидетельство о смерти\"},{\"code\":\"024\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"240\",\"name\":\"Водительское удостоверение иностранного государства\",\"id\":\"024\",\"startDate\":\"1900-01-01T00:00:00.0\",\"codeAndName\":\"024 - Водительское удостоверение иностранного государства\"}],\"personChangeList\":[{\"isCanceled\":\"false\",\"isNewHistory\":\"false\",\"endDate\":\"3000-01-01T00:00:00.0\",\"displayName\":\"Автотестер Автотестер\",\"id\":\"720187b11d440c46011e790bc\",\"sysUser\":\"tim440\",\"bid\":\"72018\",\"subjectId\":\"72018f80c1c90c45f11e790bc\",\"startDate\":\"2017-04-04T11:40:31.0\",\"versionNumber\":\"2\"},{\"isCanceled\":\"false\",\"isNewHistory\":\"false\",\"endDate\":\"2017-04-04T11:40:30.0\",\"displayName\":\"Автотестер Автотестер\",\"id\":\"72018fd51c060c45f11e790bc\",\"sysUser\":\"tim440\",\"bid\":\"72018\",\"subjectId\":\"72018f80c1c90c45f11e790bc\",\"startDate\":\"2017-04-04T11:36:51.0\",\"versionNumber\":\"1\"}],\"personProfileId\":null,\"firstName\":\"Автотестер\",\"contactList\":null,\"nationality\":{\"name\":\"Российская Федерация\",\"id\":\"643\"},\"name\":\"\",\"disabledFieldList\":\"\",\"isNotOkved\":false,\"position\":\"\",\"primaryAddress\":{\"zip\":\"676850\",\"country\":{\"literalDnsId\":\"RU\",\"code\":\"643\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"10\",\"name\":\"Российская Федерация\",\"id\":\"643\",\"shortName\":\"РОССИЯ\",\"startDate\":\"1900-01-01T00:00:00.0\",\"codeAndName\":\"643 - Российская Федерация\",\"literalIsoId\":\"RUS\"},\"addressType\":{\"code\":\"1\",\"sortOrder\":\"10\",\"name\":\"Адрес регистрации\"},\"flatNumber\":\"5\",\"kladrStreet\":{\"zip\":\"676850\",\"name\":\"1-я Вокзальная\",\"id\":\"28000003000002400\",\"type\":\"ул\"},\"exactAddress\":\"ул 1-я Вокзальная, д. 5, корпус 5, строение 5, № квартиры/№ офиса 5\",\"houseNumber\":\"5\",\"isNotStreet\":\"false\",\"buildingNumber\":\"5\",\"id\":\"72018ff993f60c45f11e790bc\",\"structureNumber\":\"5\",\"territory\":{\"fullPath\":\"Амурская обл., г. Белогорск\",\"path\":\"Амурская обл.\",\"selectable\":\"true\",\"kladrTerritoryCode\":\"2800000300000\",\"name\":\"Белогорск\",\"id\":\"162094\",\"territoryType\":{\"code\":\"3\",\"name\":\"город\",\"objectLevel\":\"3\",\"id\":\"3\",\"shortName\":\"г.\"},\"isLeaf\":\"false\",\"parentId\":\"29269\"}},\"shortName\":\"\",\"vipCode\":null,\"lastName\":\"Автотестер\",\"disabledTableList\":\"\",\"foreignPublicPosition\":\"\",\"displayName\":\"Автотестер Автотестер\",\"roles\":\"\",\"isOverload\":false,\"propertyForm\":{\"name\":\"\",\"id\":\"\"},\"birthPlace\":\"\",\"edrpou\":\"\",\"isForeignPublic\":false,\"businessmanRgsAgent\":false,\"personType\":{\"code\":\"1\",\"name\":\"Физическое лицо\"},\"secondName\":null,\"bonusMalusList\":[{\"code\":\"M\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"-1\",\"name\":\"M\",\"id\":\"M\",\"startDate\":\"2000-01-01T00:00:00.0\",\"codeAndName\":\"M - M\"},{\"code\":\"0\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"0\",\"name\":\"0\",\"id\":\"0\",\"startDate\":\"2000-01-01T00:00:00.0\",\"codeAndName\":\"0 - 0\"},{\"code\":\"1\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"1\",\"name\":\"1\",\"id\":\"1\",\"startDate\":\"2000-01-01T00:00:00.0\",\"codeAndName\":\"1 - 1\"},{\"code\":\"2\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"2\",\"name\":\"2\",\"id\":\"2\",\"startDate\":\"2000-01-01T00:00:00.0\",\"codeAndName\":\"2 - 2\"},{\"code\":\"3\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"3\",\"name\":\"3\",\"id\":\"3\",\"startDate\":\"2000-01-01T00:00:00.0\",\"codeAndName\":\"3 - 3\"},{\"code\":\"4\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"4\",\"name\":\"4\",\"id\":\"4\",\"startDate\":\"2000-01-01T00:00:00.0\",\"codeAndName\":\"4 - 4\"},{\"code\":\"5\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"5\",\"name\":\"5\",\"id\":\"5\",\"startDate\":\"2000-01-01T00:00:00.0\",\"codeAndName\":\"5 - 5\"},{\"code\":\"6\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"6\",\"name\":\"6\",\"id\":\"6\",\"startDate\":\"2000-01-01T00:00:00.0\",\"codeAndName\":\"6 - 6\"},{\"code\":\"7\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"7\",\"name\":\"7\",\"id\":\"7\",\"startDate\":\"2000-01-01T00:00:00.0\",\"codeAndName\":\"7 - 7\"},{\"code\":\"8\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"8\",\"name\":\"8\",\"id\":\"8\",\"startDate\":\"2000-01-01T00:00:00.0\",\"codeAndName\":\"8 - 8\"},{\"code\":\"9\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"9\",\"name\":\"9\",\"id\":\"9\",\"startDate\":\"2000-01-01T00:00:00.0\",\"codeAndName\":\"9 - 9\"},{\"code\":\"10\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"10\",\"name\":\"10\",\"id\":\"10\",\"startDate\":\"2000-01-01T00:00:00.0\",\"codeAndName\":\"10 - 10\"},{\"code\":\"11\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"11\",\"name\":\"11\",\"id\":\"11\",\"startDate\":\"2000-01-01T00:00:00.0\",\"codeAndName\":\"11 - 11\"},{\"code\":\"12\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"12\",\"name\":\"12\",\"id\":\"12\",\"startDate\":\"2000-01-01T00:00:00.0\",\"codeAndName\":\"12 - 12\"},{\"code\":\"13\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"13\",\"name\":\"13\",\"id\":\"13\",\"startDate\":\"2000-01-01T00:00:00.0\",\"codeAndName\":\"13 - 13\"}],\"addressShortInfo\":\"676850, РОССИЯ, Амурская обл., г. Белогорск, ул 1-я Вокзальная, д. 5, корпус 5, строение 5, № квартиры/№ офиса 5\",\"isIpension\":false,\"contractBid\":\"\",\"primaryDocumentTypeList\":[{\"code\":\"023\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"230\",\"name\":\"Другой документ\",\"id\":\"023\",\"startDate\":\"1900-01-01T00:00:00.0\",\"codeAndName\":\"023 - Другой документ\"},{\"code\":\"030\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"300\",\"name\":\"Свидетельство о предоставлении временного убежища на территории Российской Федерации\",\"id\":\"030\",\"startDate\":\"1900-01-01T00:00:00.0\",\"codeAndName\":\"030 - Свидетельство о предоставлении временного убежища на территории Российской Федерации\"},{\"code\":\"031\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"310\",\"name\":\"Удостоверение личности военнослужащего Российской Федерации\",\"id\":\"031\",\"startDate\":\"1900-01-01T00:00:00.0\",\"codeAndName\":\"031 - Удостоверение личности военнослужащего Российской Федерации\"},{\"code\":\"032\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"320\",\"name\":\"Паспорт гражданина Украины\",\"id\":\"032\",\"startDate\":\"1900-01-01T00:00:00.0\",\"codeAndName\":\"032 - Паспорт гражданина Украины\"},{\"code\":\"033\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"330\",\"name\":\"Разрешение на временное проживание в Российской Федерации\",\"id\":\"033\",\"startDate\":\"1900-01-01T00:00:00.0\",\"codeAndName\":\"033 - Разрешение на временное проживание в Российской Федерации\"},{\"code\":\"034\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"340\",\"name\":\"Временное удостоверение, выданное взамен военного билета\",\"id\":\"034\",\"startDate\":\"1900-01-01T00:00:00.0\",\"codeAndName\":\"034 - Временное удостоверение, выданное взамен военного билета\"},{\"code\":\"039\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"390\",\"name\":\"Удостоверение тракториста-машиниста\",\"id\":\"039\",\"startDate\":\"1900-01-01T00:00:00.0\",\"codeAndName\":\"039 - Удостоверение тракториста-машиниста\"},{\"code\":\"040\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"400\",\"name\":\"Удостоверение тракториста-машиниста старого образца\",\"id\":\"040\",\"startDate\":\"1900-01-01T00:00:00.0\",\"codeAndName\":\"040 - Удостоверение тракториста-машиниста старого образца\"},{\"code\":\"001\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"10\",\"name\":\"Свидетельство о рождении РФ\",\"id\":\"001\",\"startDate\":\"1900-01-01T00:00:00.0\",\"codeAndName\":\"001 - Свидетельство о рождении РФ\"},{\"code\":\"002\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"20\",\"name\":\"Удостоверение личности офицера РФ\",\"id\":\"002\",\"startDate\":\"1900-01-01T00:00:00.0\",\"codeAndName\":\"002 - Удостоверение личности офицера РФ\"},{\"code\":\"003\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"30\",\"name\":\"Справка об освобождении из места лишения свободы РФ\",\"id\":\"003\",\"startDate\":\"1900-01-01T00:00:00.0\",\"codeAndName\":\"003 - Справка об освобождении из места лишения свободы РФ\"},{\"code\":\"004\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"40\",\"name\":\"Паспорт Минморфлота\",\"id\":\"004\",\"startDate\":\"1900-01-01T00:00:00.0\",\"codeAndName\":\"004 - Паспорт Минморфлота\"},{\"code\":\"005\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"50\",\"name\":\"Военный билет солдата (матроса, сержанта, старшины) РФ\",\"id\":\"005\",\"startDate\":\"1900-01-01T00:00:00.0\",\"codeAndName\":\"005 - Военный билет солдата (матроса, сержанта, старшины) РФ\"},{\"code\":\"006\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"60\",\"name\":\"Дипломатический паспорт гражданина РФ\",\"id\":\"006\",\"startDate\":\"1900-01-01T00:00:00.0\",\"codeAndName\":\"006 - Дипломатический паспорт гражданина РФ\"},{\"code\":\"007\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"70\",\"name\":\"Иностранный паспорт\",\"id\":\"007\",\"startDate\":\"1900-01-01T00:00:00.0\",\"codeAndName\":\"007 - Иностранный паспорт\"},{\"code\":\"008\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"80\",\"name\":\"Свидетельство о регистрации ходатайства иммигранта о признании его беженцем\",\"id\":\"008\",\"startDate\":\"1900-01-01T00:00:00.0\",\"codeAndName\":\"008 - Свидетельство о регистрации ходатайства иммигранта о признании его беженцем\"},{\"code\":\"009\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"90\",\"name\":\"Вид на жительство\",\"id\":\"009\",\"startDate\":\"1900-01-01T00:00:00.0\",\"codeAndName\":\"009 - Вид на жительство\"},{\"code\":\"010\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"100\",\"name\":\"Удостоверение беженца в РФ\",\"id\":\"010\",\"startDate\":\"1900-01-01T00:00:00.0\",\"codeAndName\":\"010 - Удостоверение беженца в РФ\"},{\"code\":\"011\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"110\",\"name\":\"Временное удостоверение личности гражданина РФ\",\"id\":\"011\",\"startDate\":\"1900-01-01T00:00:00.0\",\"codeAndName\":\"011 - Временное удостоверение личности гражданина РФ\"},{\"code\":\"012\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"120\",\"name\":\"Паспорт гражданина РФ\",\"id\":\"012\",\"startDate\":\"1900-01-01T00:00:00.0\",\"codeAndName\":\"012 - Паспорт гражданина РФ\"},{\"code\":\"013\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"130\",\"name\":\"Загранпаспорт гражданина РФ\",\"id\":\"013\",\"startDate\":\"1900-01-01T00:00:00.0\",\"codeAndName\":\"013 - Загранпаспорт гражданина РФ\"},{\"code\":\"014\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"140\",\"name\":\"Свидетельство о рождении, выданное уполномоченным органом иностранного государства\",\"id\":\"014\",\"startDate\":\"1900-01-01T00:00:00.0\",\"codeAndName\":\"014 - Свидетельство о рождении, выданное уполномоченным органом иностранного государства\"},{\"code\":\"015\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"150\",\"name\":\"Паспорт моряка\",\"id\":\"015\",\"startDate\":\"1900-01-01T00:00:00.0\",\"codeAndName\":\"015 - Паспорт моряка\"},{\"code\":\"016\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"160\",\"name\":\"Военный билет офицера запаса РФ\",\"id\":\"016\",\"startDate\":\"1900-01-01T00:00:00.0\",\"codeAndName\":\"016 - Военный билет офицера запаса РФ\"},{\"code\":\"018\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"180\",\"name\":\"Иные документы, выдаваемые органами МВД России\",\"id\":\"018\",\"startDate\":\"1900-01-01T00:00:00.0\",\"codeAndName\":\"018 - Иные документы, выдаваемые органами МВД России\"},{\"code\":\"019\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"190\",\"name\":\"Паспорт гражданина СССР\",\"id\":\"019\",\"startDate\":\"1900-01-01T00:00:00.0\",\"codeAndName\":\"019 - Паспорт гражданина СССР\"},{\"code\":\"020\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"200\",\"name\":\"Загранпаспорт гражданина СССР\",\"id\":\"020\",\"startDate\":\"1900-01-01T00:00:00.0\",\"codeAndName\":\"020 - Загранпаспорт гражданина СССР\"},{\"code\":\"017\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"170\",\"name\":\"Водительское удостоверение РФ\",\"id\":\"017\",\"startDate\":\"1900-01-01T00:00:00.0\",\"codeAndName\":\"017 - Водительское удостоверение РФ\"},{\"code\":\"024\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"240\",\"name\":\"Водительское удостоверение иностранного государства\",\"id\":\"024\",\"startDate\":\"1900-01-01T00:00:00.0\",\"codeAndName\":\"024 - Водительское удостоверение иностранного государства\"},{\"code\":\"022\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"220\",\"name\":\"Свидетельство о смерти\",\"id\":\"022\",\"startDate\":\"1900-01-01T00:00:00.0\",\"codeAndName\":\"022 - Свидетельство о смерти\"}],\"sex\":\"1\",\"inn\":\"\",\"birthDate\":\"1970-01-01T00:00:00.0\",\"okpo\":\"\",\"fgsn\":\"\",\"documentList\":[{\"versionEndDate\":\"3000-01-01T00:00:00.0\",\"documentType\":{\"code\":\"017\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"170\",\"name\":\"Водительское удостоверение РФ\",\"id\":\"017\",\"startDate\":\"1900-01-01T00:00:00.0\",\"codeAndName\":\"017 - Водительское удостоверение РФ\"},\"sysSource\":\"1\",\"documentGroup\":{\"code\":\"1\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"10\",\"name\":\"Основной документ\",\"id\":\"1\",\"startDate\":\"2000-01-01T00:00:00.0\",\"codeAndName\":\"1 - Основной документ\"},\"isIdPregenerated\":\"false\",\"number\":\"123456\",\"sysEditor\":\"1\",\"series\":\"4561\",\"versionStartDate\":\"2017-04-04T11:40:31.0\",\"entityChangeId\":\"720187b11d440c46011e790bc\",\"personId\":\"72018f80c1c90c45f11e790bc\",\"lastModified\":\"2017-04-04T11:40:31.0\",\"sysUser\":\"tim440\",\"sysCreator\":\"1\",\"id\":\"72018fd972dd0c45f11e790bc\",\"bid\":\"72018\"}],\"contractId\":\"\",\"contractReferenceList\":\"\",\"additionalAddress\":{\"zip\":\"676850\",\"country\":{\"literalDnsId\":\"RU\",\"code\":\"643\",\"endDate\":\"3000-01-01T00:00:00.0\",\"sortOrder\":\"10\",\"name\":\"Российская Федерация\",\"id\":\"643\",\"shortName\":\"РОССИЯ\",\"startDate\":\"1900-01-01T00:00:00.0\",\"codeAndName\":\"643 - Российская Федерация\",\"literalIsoId\":\"RUS\"},\"addressType\":{\"code\":\"2\",\"sortOrder\":\"20\",\"name\":\"Почтовый адрес\"},\"flatNumber\":\"5\",\"kladrStreet\":{\"zip\":\"676850\",\"name\":\"1-я Вокзальная\",\"id\":\"28000003000002400\",\"type\":\"ул\"},\"exactAddress\":\"ул 1-я Вокзальная, д. 5, корпус 5, строение 5, № квартиры/№ офиса 5\",\"houseNumber\":\"5\",\"isNotStreet\":\"false\",\"buildingNumber\":\"5\",\"id\":\"72018ff993f61c45f11e790bc\",\"structureNumber\":\"5\",\"territory\":{\"fullPath\":\"Амурская обл., г. Белогорск\",\"path\":\"Амурская обл.\",\"selectable\":\"true\",\"kladrTerritoryCode\":\"2800000300000\",\"name\":\"Белогорск\",\"id\":\"162094\",\"territoryType\":{\"code\":\"3\",\"name\":\"город\",\"objectLevel\":\"3\",\"id\":\"3\",\"shortName\":\"г.\"},\"isLeaf\":\"false\",\"parentId\":\"29269\"}},\"bid\":\"72018\",\"isNotPrimaryDocContact\":false,\"foreignRegCode\":\"\",\"snils\":\"\",\"foreignTaxCode\":\"\"},\"insBridgeParamHash\":\"\",\"liabilityEndDate\":null,\"currency\":{\"code\":\"RUR\",\"name\":\"Российский рубль\",\"id\":\"RUR\"},\"cancelReason\":{\"code\":\"\",\"name\":\"\",\"id\":\"\"},\"insbridgePremiumCalculateStartDate\":\"2016-04-01T00:00:00.0\",\"osagoSchema17StartDate\":\"2016-10-01T00:00:00.0\",\"product\":{\"code\":\"02001\",\"name\":\"ОСАГО\",\"personRole\":{\"code\":\"2\"},\"id\":\"02001\"},\"isStateProcurement\":false,\"rsaKbmStartDate\":\"2015-10-01T00:00:00.0\",\"osagoStoaStartDate\":\"2017-04-01T00:00:00.0\",\"parentId\":\"\",\"insurerId\":\"72018f80c1c90c45f11e790bc\",\"agentStatementId\":\"72018efdb8a60c01811e78ab8\",\"agentStatementDate\":\"2017-04-04T00:00:00.0\",\"series\":\"ЕЕЕ\",\"coInsuranceTotalPremium\":0,\"bonusMalus\":{\"id\":\"M\"},\"previousInsuranceCompany\":{\"name\":\"\",\"id\":\"\"},\"previousContractNumber\":\"\",\"contractDate\":\"2017-04-04T00:00:00\",\"agentRoleList\":[],\"contractChangeList\":\"\",\"claimReturnList\":[],\"coInsuranceStartDate\":\"2016-12-20T00:00:00.0\",\"vehicleSysEditor\":\"\",\"project\":{\"code\":\"\",\"name\":\"\",\"id\":\"\"},\"office\":{\"name\":\"Амурский\",\"id\":\"226\"},\"insuranceActNumber\":\"\",\"commissionList\":\"\",\"driverList\":[],\"segmentActivateStartDate\":\"2016-05-01T00:00:00.0\",\"sysEditor\":\"1\",\"insurerIsOwner\":false,\"reissueDate\":null,\"sysCreator\":\"1\",\"contractTypeClass\":{\"code\":\"1\",\"name\":\"Cтраховые договоры\",\"id\":\"1\"},\"statementStatusCode\":\"0201\",\"sector\":{\"name\":\"\",\"id\":\"\"},\"isServiceStation\":false,\"ownerKbmRsaTypeId\":\"\",\"contractStartDate\":\"2017-04-04T00:00:00\",\"insurerSysEditor\":\"\",\"leasingCompany\":{\"id\":\"\",\"codeAndName\":\"\"},\"isActivateAgentFromAnotherBranch\":true,\"agentName\":\"Автотест Физ Лицо\",\"debitWriteOffDate\":null,\"isReinsure\":false,\"insurerHasCellPhone\":true,\"productVariant\":{\"code\":\"\",\"name\":\"\",\"id\":\"\"},\"isEmptySourceCheckSum\":true,\"premiumCalcDate\":\"2017-04-04T00:00:00\",\"isCoInsuranceLeaderPayType\":null,\"checkSum\":\"\",\"lastModified\":null,\"bankIntermediary\":{\"id\":\"\",\"codeAndName\":\"\"},\"claimReturnSum\":0,\"sapMigrationReasonCode\":\"\",\"agentInsuranceCompany\":{\"name\":\"\",\"id\":\"\"},\"agentId\":\"72018535eb0c0a38211e7a7a2\",\"cancelDate\":null,\"stateProcurementStartDate\":\"2017-01-01T00:00:00.0\",\"existActiveAsyncRequest\":false,\"rsaPreviousInsuranceCompanyName\":\"\",\"hasViolations\":false,\"liabilityStartDate\":null,\"factAccruedPremiumDateStartDate\":\"2017-05-01T00:00:00\",\"saleGroup\":{\"name\":\"Киселева Яна Сергеевна\",\"id\":\"7201873e93a06013f1ab64bc8\"},\"segmentRequestStatusName\":\"Сегменты не определены\",\"reinsureStartDate\":\"2016-12-01T00:00:00.0\",\"factAccruedPremium\":0,\"agentList\":[],\"department\":{\"displayValue\":\"\",\"id\":\"\",\"bid\":\"\"},\"kbmRsaId\":\"\",\"activeAgentRolesDate\":null,\"insurerChangeId\":\"720187b11d440c46011e790bc\",\"comments\":\"\",\"contractOption\":{\"code\":\"1\",\"name\":\"Первоначальный\",\"id\":\"1\"},\"targetChangeId\":\"\",\"contractEndDate\":\"2018-04-03T00:00:00\",\"cancelStatementDate\":null,\"requestSource\":{\"name\":\"\",\"id\":\"\"},\"smsSubscription\":false,\"insurerName\":\"Автотестер Автотестер\",\"paymentList\":[],\"contractTypeClassStartDate\":\"2016-12-16T00:00:00.0\",\"blankDto\":{\"number\":\"2000000001\",\"series\":\"ЕЕЕ\",\"id\":null,\"blankTypeId\":\"1\"},\"premiumRur\":0,\"contractPremiumHash\":\"\",\"entityPurpose\":\"1\",\"liabilitySum\":0,\"calculatedPremium\":0,\"isProcessPersInfo\":true,\"personLinkList\":[],\"previousContractSeries\":\"\",\"kbmRsaManualId\":\"\",\"isProcessPersInfoEmpty\":false}&acceptedWarnings=%5B%220010800%22%2C%220010700%22%2C%220006802%22%5D";*/
        log("REQUEST OSAGO SUBMIT:\n ==================\n" + requestOsagoSubmit + "\n ==================\n");
        return requestOsagoSubmit;
    }

    @Step("Сохранение ОСАГО")
    private void osagoSubmit(String requestOsagoSubmit) {
        target = client.target(BASE_URL + "private/data/module-osago/OsagoWs/store");
        Response responseOsagoSubmit = getInvocation(target, Entity.entity(requestOsagoSubmit, MediaType.APPLICATION_FORM_URLENCODED_TYPE)).invoke();
        SaveResult saveResult = getSaveResult(responseOsagoSubmit);
        assertEquals(saveResult.isSuccess(), true);
    }

    @Step("Получение ТС")
    private VehicleFound getVehicleFound(VehiclePreview vehiclePreview) {
        String requestVehicleFull = "load=true&id=" + vehiclePreview.getVehicles().get(0).getId();//"720183f491c70c46011e7ab51"
        target = client.target(BASE_URL + "private/data/module-vehicle/VehicleWs/load");
        Response responseVehicleFull = getInvocation(target, Entity.entity(requestVehicleFull, MediaType.APPLICATION_FORM_URLENCODED_TYPE)).invoke();
        VehicleFound vehicleFound = getVehicleFull(responseVehicleFull);
        assertEquals(vehicleFound.isSuccess(), true);
        return vehicleFound;
    }
}